buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
		maven { // The repo from which to get waila
			name "Mobius Repo"
			url "http://mobiusstrip.eu/maven"
		}
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-2.2.0.2a"
project.ext.neiVersion = "1.7.10-1.0.4.107"
group= "mc.Mitchellbrine.diseaseCraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DiseaseCraft"

minecraft {
    //version = "1.8-11.14.1.1334"
	version = "10.13.4.1448-1.7.10"
	if (file('../run').exists()) {
		runDir = "../run"
	} else {
		runDir = "eclipse"
	}
	//mappings = "snapshot_20141130"
}

repositories{
    mavenCentral()
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }

}
 
dependencies {
    compile 'org.apache.commons:commons-math3:3.2'
    compile 'org.jfree:jcommon:1.0.21'
    compile 'org.jfree:jfreechart:1.0.17'
    compile 'com.miglayout:miglayout-swing:4.2'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile "mcp.mobius.mobiuscore:MobiusCore:1.2.4:dev"
    compile "mcp.mobius.opis:Opis:1.2.4:dev"
}
 
// some crazy stuff to make sure the coremod stuff is in the mods folder...
// because it wont work otherwise... because FML doesnt load coremods from the classpath
task copyCoreMods(type: Copy, dependsOn: "extractUserDev") {
    from configurations.compile
    include "**/*Mobius*.jar"
    into file(minecraft.runDir + "/mods")
}
tasks.setupDevWorkspace.dependsOn copyCoreMods
tasks.setupDecompWorkspace.dependsOn copyCoreMods

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
	from sourceSets.main.output
	from sourceSets.api.output
	classifier = 'dev'
}

artifacts {
	archives deobfJar
}

jar{
    manifest{
        attributes(
            "FMLCorePlugin" : "mc.Mitchellbrine.diseaseCraft.coremod.DCCoreMod",
            "FMLCorePluginContainsFMLMod": "true"
        )
    }
}

